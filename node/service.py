import ujson
import requests
from typing import List, Tuple

from uc_flow_nodes.schemas import NodeRunContext
from uc_flow_nodes.service import NodeService
from uc_flow_nodes.views import info, execute
from uc_flow_schemas import flow
from uc_flow_schemas.flow import Property, CredentialProtocol, RunState, DisplayOptions, OptionValue
from uc_http_requester.requester import Request
from node.credential_type import CredentialType
from node.enums import NodeAction, Resource, Operation, Parameters

URL_LOGIN = 'auth/login'
URL_CUSTOMER = 'customer/index'


class NodeType(flow.NodeType):
    id: str = '89490712-0453-44ac-bbf4-680ae7b26080'
    type: flow.NodeType.Type = flow.NodeType.Type.action
    name: str = 'My_alfacrm'
    displayName: str = 'my_alfacrm'
    icon: str = '<svg><text x="8" y="50" font-size="50">ü§ñ</text></svg>'
    description: str = ''
    properties: List[Property] = [
        Property(
            displayName='–î–µ–π—Å—Ç–≤–∏–µ –∫—É–±–∏–∫–∞',
            name='node_action',
            type=Property.Type.OPTIONS,
            options=[
                OptionValue(
                    name='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
                    value=NodeAction.auth,
                    description=''
                ),
                OptionValue(
                    name='–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
                    value=NodeAction.get_data,
                    description=''
                ),
            ]
        ),
        Property(
            displayName='url',
            name='hostname',
            type=Property.Type.STRING,
            default='',
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.auth
                    ],
                },
            ), 
        ),
        Property(
            displayName='id —Ñ–∏–ª–∏–∞–ª–∞',
            name='branch',
            type=Property.Type.NUMBER,
            default='',
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.auth
                    ],
                },
            ), 
        ),
        Property(
            displayName='email',
            name='email',
            type=Property.Type.EMAIL,
            default='',
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.auth
                    ],
                },
            ), 
        ),
        Property(
            displayName='API key',
            name='api_key',
            type=Property.Type.STRING,
            default='',
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.auth
                    ],
                },
            ), 
        ),
        Property(
            displayName='auth_result',
            name='auth_result',
            type=Property.Type.JSON,
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.get_data
                    ],
                },
            ),     
        ),
        Property(
            displayName='Resource',
            name='resource',
            type=Property.Type.OPTIONS,
            options=[
                OptionValue(
                    name='Customer',
                    value=Resource.customer,
                    description='',
                ),
            ],
            displayOptions=DisplayOptions(
                show={
                    'node_action': [
                        NodeAction.get_data
                    ],
                },
            ),      
        ),
        Property(
            displayName='Operation',
            name='operation',
            type=Property.Type.OPTIONS,
            options=[
                OptionValue(
                    name='index',
                    value=Operation.index_,
                    description='',
                ),
                OptionValue(
                    name='create',
                    value=Operation.create,
                    description='',
                ),
                OptionValue(
                    name='update',
                    value=Operation.update,
                    description='',
                ),
            ],
            displayOptions=DisplayOptions(
                show={
                     'node_action': [
                        NodeAction.get_data
                    ],
                    'resource': [
                        Resource.customer
                    ],
                },
            ),
        ),
        Property(
            displayName='Parameters',
            name='parameters',
            type=Property.Type.COLLECTION,
            default={},
            displayOptions=DisplayOptions(
                show={
                     'node_action': [
                        NodeAction.get_data
                    ],
                    'resource': [
                        Resource.customer,
                    ],
                    'operation': [
                        Operation.index_,
                    ],
                }
            ),
            options=[
                Property(
                    displayName='id',
                    name=Parameters.id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='id_study',
                    name=Parameters.is_study,
                    type=Property.Type.NUMBER,
                    default='',
                    description='—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ ( 0 - –ª–∏–¥, 1 - –∫–ª–∏–µ–Ω—Ç)',
                ),
                Property(
                    displayName='study_status_id',
                    name=Parameters.study_status_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='name',
                    name=Parameters.name,
                    type=Property.Type.STRING,
                    default='',
                    description='–∏–º—è –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='gender',
                    name=Parameters.gender,
                    type=Property.Type.STRING,
                    default='',
                    description='–ø–æ–ª –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='age_from',
                    name=Parameters.age_from,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–≤–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç',
                ),
                Property(
                    displayName='age_to',
                    name=Parameters.age_to,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–≤–æ–∑—Ä–∞—Å—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ',
                ),
                Property(
                    displayName='phone',
                    name=Parameters.phone,
                    type=Property.Type.STRING,
                    default='',
                    description='–∫–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='legal_type',
                    name=Parameters.legal_type,
                    type=Property.Type.NUMBER,
                    default='',
                    description='—Ç–∏–ø –∑–∞–∫–∞–∑—á–∏–∫–∞(1-—Ñ–∏–∑ –ª–∏—Ü–æ, 2-—é—Ä.–ª–∏—Ü–æ)',
                ),
                Property(
                    displayName='legal_name',
                    name=Parameters.legal_name,
                    type=Property.Type.STRING,
                    default='',
                    description='–∏–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞',
                ),
                Property(
                    displayName='company_id',
                    name=Parameters.company_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id —é—Ä –ª–∏—Ü–∞',
                ),
                Property(
                    displayName='lesson_count_from',
                    name=Parameters.lesson_count_from,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–æ—Å—Ç–∞—Ç–æ–∫ —É—Ä–æ–∫–æ–≤ –æ—Ç',
                ),
                Property(
                    displayName='lesson_count_to',
                    name=Parameters.lesson_count_to,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–æ—Å—Ç–∞—Ç–æ–∫ —É—Ä–æ–∫–æ–≤ –¥–æ',
                ),
                Property(
                    displayName='balance_contract_from',
                    name=Parameters.balance_contract_from,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–±–∞–ª–∞–Ω—Å –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ç',
                ),
                Property(
                    displayName='balance_contract_to',
                    name=Parameters.balance_contract_to,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–±–∞–ª–∞–Ω—Å –¥–æ–≥–æ–≤–æ—Ä–∞ –¥–æ',
                ),
                Property(
                    displayName='balance_bonus_from',
                    name=Parameters.balance_bonus_from,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ –æ—Ç',
                ),
                Property(
                    displayName='balance_bonus_to',
                    name=Parameters.balance_bonus_to,
                    type=Property.Type.NUMBER,
                    default='',
                    description='–±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤ –¥–æ',
                ),
                Property(
                    displayName='removed',
                    name=Parameters.removed,
                    type=Property.Type.NUMBER,
                    default='',
                    description='—Ñ–ª–∞–≥ –∞—Ä—Ö–∏–≤–Ω–æ—Å—Ç–∏ (2 - —Ç–æ–ª—å–∫–æ –∞—Ä—Ö–∏–≤–Ω—ã–µ, 1 - –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∞—Ä—Ö–∏–≤–Ω—ã–µ, 0 ‚Äì —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ)',
                ),
                Property(
                    displayName='removed_from',
                    name=Parameters.removed_from,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∞—Ä—Ö–∏–≤ –æ—Ç',
                ),
                Property(
                    displayName='removed_to',
                    name=Parameters.removed,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∞—Ä—Ö–∏–≤',
                ),
                Property(
                    displayName='level_id',
                    name=Parameters.level_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id —É—Ä–æ–≤–Ω—è –∑–Ω–∞–Ω–∏–π',
                ),
                Property(
                    displayName='assigned_id',
                    name=Parameters.assigned_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
                ),
                Property(
                    displayName='employee_id',
                    name=Parameters.employee_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ–¥–∞–≥–æ–≥–∞',
                ),
                Property(
                    displayName='lead_source_id',
                    name=Parameters.lead_source_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id –∏—Å—Ç–æ—á–Ω–∏–∫–∞',
                ),
                Property(
                    displayName='color',
                    name=Parameters.color,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id —Ü–≤–µ—Ç–∞',
                ),
                Property(
                    displayName='note',
                    name=Parameters.note,
                    type=Property.Type.STRING,
                    default='',
                    description='–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ',
                ),
                Property(
                    displayName='date_from',
                    name=Parameters.date_from,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç',
                ),
                Property(
                    displayName='date_to',
                    name=Parameters.date_to,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ',
                ),
                Property(
                    displayName='next_lesson_date_from',
                    name=Parameters.next_lesson_date_from,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ —Å–ª–µ–¥.–ø–æ—Å–µ—â–µ–Ω–∏—è –æ—Ç',
                ),
                Property(
                    displayName='next_lesson_date_to',
                    name=Parameters.next_lesson_date_to,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ —Å–ª–µ–¥.–ø–æ—Å–µ—â–µ–Ω–∏—è –¥–æ',
                ),
                Property(
                    displayName='tariff_till_from',
                    name=Parameters.tariff_till_from,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –æ—Ç',
                ),
                Property(
                    displayName='tariff_till_to',
                    name=Parameters.tariff_till_to,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –¥–æ',
                ),
                Property(
                    displayName='customer_reject_id',
                    name=Parameters.customer_reject_id,
                    type=Property.Type.NUMBER,
                    default='',
                    description='id –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–∞–∑–∞',
                ),
                Property(
                    displayName='comment',
                    name=Parameters.comment,
                    type=Property.Type.STRING,
                    default='',
                    description='–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',
                ),
                Property(
                    displayName='dob_from',
                    name=Parameters.dob_from,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç',
                ),
                Property(
                    displayName='dob_to',
                    name=Parameters.dob_to,
                    type=Property.Type.DATE,
                    default='',
                    description='–¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ',
                ),
                Property(
                    displayName='withGroups:true',
                    name=Parameters.withGroups_true,
                    type=Property.Type.STRING,
                    default='',
                    description='–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∫–ª–∏–µ–Ω—Ç–∞',
                ),
                Property(
                    displayName='page',
                    name=Parameters.page,
                    type=Property.Type.NUMBER,
                    default='',
                    description='—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏',
                ),
            ]   
        ),
    ]


class InfoView(info.Info):
    class Response(info.Info.Response):
        node_type: NodeType


class ExecuteView(execute.Execute):
    async def post(self, json: NodeRunContext) -> NodeRunContext:
        try:
            node_action = json.node.data.properties['node_action']

            if node_action == NodeAction.auth:
                hostname = json.node.data.properties['hostname']
                email = json.node.data.properties['email']
                api_key = json.node.data.properties['api_key']
                branch = json.node.data.properties['branch']

                url = f'https://{hostname}/v2api/{URL_LOGIN}'

                headers = {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                        }
            
                auth_data = {"email" : email,"api_key" : api_key}

                auth_request = Request(
                    url=url,
                    method=Request.Method.post,
                    json=auth_data,
                    headers=headers)
            
                auth_result = await auth_request.execute()

                auth_result_data = auth_result.json()
                token = auth_result_data['token']

                await json.save_result({
                    "token": token,
                    "branch": branch,
                    "hostname": hostname
                    })
                json.state = RunState.complete

            if node_action == NodeAction.get_data:
                token = json.node.data.properties['auth_result']['token']
                branch = json.node.data.properties['auth_result']['branch']
                hostname = json.node.data.properties['auth_result']['hostname']

                headers = {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'X-ALFACRM-TOKEN': token}

                url = f'https://{hostname}/v2api/{branch}/{URL_CUSTOMER}'
                data = Request(
                    url=url,
                    method=Request.Method.post,
                    headers=headers)

                result = await data.execute()

                await json.save_result({
                "result": result.json()
                })

                json.state = RunState.complete

        except Exception as e:
            self.log.warning(f'Error {e}')
            await json.save_error(str(e))
            json.state = RunState.error
        return json


class Service(NodeService):
    class Routes(NodeService.Routes):
        Info = InfoView
        Execute = ExecuteView
